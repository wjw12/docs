{
  "openapi": "3.0.1",
  "info": {
    "title": "Heurist API",
    "description": "Heurist Image and Text Generation APIs",
    "version": "1.0.0",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "{server}",
      "variables": {
        "server": {
          "enum": [
            "http://sequencer.heurist.xyz",
            "https://llm-gateway.heurist.xyz"
          ],
          "default": "http://sequencer.heurist.xyz"
        }
      }
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/submit_job": {
      "post": {
        "servers": [
          {
            "url": "http://sequencer.heurist.xyz"
          }
        ],
        "summary": "Submit Image Generation Job",
        "description": "Submits a job to generate an image based on the provided text prompt using Stable Diffusion or Flux models.",
        "operationId": "submitImageJob",
        "requestBody": {
          "description": "JSON payload to specify the image generation job details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job successfully submitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "description": "URL pointing to the generated image"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid parameters or missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access, invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/chat/completions": {
      "post": {
        "servers": [
          {
            "url": "https://llm-gateway.heurist.xyz"
          }
        ],
        "summary": "Create Chat Completion",
        "description": "Creates a completion for the chat message. OpenAI-compatible endpoint for LLM interactions.",
        "operationId": "createChatCompletion",
        "requestBody": {
          "description": "Chat completion request parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["model", "messages"],
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "ID of the model to use",
                    "enum": [
                      "dolphin-2.9-llama3-8b",
                      "hermes-3-llama3.1-8b",
                      "meta-llama/llama-3-70b-instruct",
                      "meta-llama/llama-3.1-405b-instruct",
                      "mistralai/mistral-7b-instruct",
                      "mistralai/mixtral-8x22b-instruct",
                      "mistralai/mixtral-8x7b-instruct",
                      "nvidia/llama-3.1-nemotron-70b-instruct",
                      "openhermes-mixtral-8x7b-gptq",
                      "qwen/qwen-2.5-coder-32b-instruct",
                      "theia-llama-3.1-8b"
                    ]
                  },
                  "messages": {
                    "type": "array",
                    "description": "A list of messages comprising the conversation so far",
                    "items": {
                      "type": "object",
                      "required": ["role", "content"],
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["system", "user", "assistant"],
                          "description": "The role of the message author"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the message"
                        }
                      }
                    }
                  },
                  "max_tokens": {
                    "type": "integer",
                    "description": "The maximum number of tokens to generate",
                    "example": 64
                  },
                  "temperature": {
                    "type": "number",
                    "format": "float",
                    "description": "Sampling temperature between 0 and 2",
                    "minimum": 0,
                    "maximum": 2
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "Whether to stream back partial progress",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful completion response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletionResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "description": "Server-sent events stream for partial completions when stream=true"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access, invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "SubmitJobRequest": {
        "type": "object",
        "required": ["prompt"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Text prompt for image generation"
          },
          "model": {
            "type": "string",
            "description": "Model to use for generation",
            "default": "stable-diffusion"
          }
        }
      },
      "ChatCompletionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the completion"
          },
          "object": {
            "type": "string",
            "enum": ["chat.completion"]
          },
          "created": {
            "type": "integer",
            "description": "Unix timestamp of when the completion was created"
          },
          "model": {
            "type": "string",
            "description": "The model used for completion"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "index": {
                  "type": "integer"
                },
                "message": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": ["assistant"]
                    },
                    "content": {
                      "type": "string"
                    }
                  }
                },
                "finish_reason": {
                  "type": "string",
                  "enum": ["stop", "length", "content_filter"]
                }
              }
            }
          },
          "usage": {
            "type": "object",
            "properties": {
              "prompt_tokens": {
                "type": "integer"
              },
              "completion_tokens": {
                "type": "integer"
              },
              "total_tokens": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}